---
export interface Props {
  currentPage: number;
  totalPages: number;
  baseUrl?: string;
}

const { currentPage, totalPages, baseUrl = '' } = Astro.props;

const getPageUrl = (page: number) => {
  if (page === 1) return baseUrl;
  return `${baseUrl}?page=${page}`;
};

const getVisiblePages = () => {
  const delta = 2;
  const range = [];
  const rangeWithDots = [];

  for (let i = Math.max(2, currentPage - delta); i <= Math.min(totalPages - 1, currentPage + delta); i++) {
    range.push(i);
  }

  if (currentPage - delta > 2) {
    rangeWithDots.push(1, '...');
  } else {
    rangeWithDots.push(1);
  }

  rangeWithDots.push(...range);

  if (currentPage + delta < totalPages - 1) {
    rangeWithDots.push('...', totalPages);
  } else {
    rangeWithDots.push(totalPages);
  }

  return rangeWithDots;
};

const visiblePages = totalPages > 1 ? getVisiblePages() : [];
---

{totalPages > 1 && (
  <div class="pagination">
    {currentPage > 1 && (
      <a href={getPageUrl(currentPage - 1)} class="pagination-btn">
        ← Anterior
      </a>
    )}
    
    <div class="pagination-numbers">
      {visiblePages.map((page) => 
        typeof page === 'number' ? (
          <a 
            href={getPageUrl(page)} 
            class={`pagination-number ${page === currentPage ? 'active' : ''}`}
          >
            {page}
          </a>
        ) : (
          <span class="pagination-dots">{page}</span>
        )
      )}
    </div>

    {currentPage < totalPages && (
      <a href={getPageUrl(currentPage + 1)} class="pagination-btn">
        Siguiente →
      </a>
    )}
  </div>
)}

<style>
  .pagination {
    display: flex;
    justify-content: center;
    align-items: center;
    margin: 40px 0;
    gap: 10px;
    flex-wrap: wrap;
  }

  .pagination-btn {
    background: rgba(255, 255, 255, 0.9);
    color: #333;
    padding: 12px 20px;
    border-radius: 25px;
    text-decoration: none;
    font-weight: bold;
    transition: all 0.3s ease;
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
    backdrop-filter: blur(10px);
  }

  .pagination-btn:hover {
    background: #ffcc02;
    transform: translateY(-2px);
    box-shadow: 0 6px 20px rgba(0, 0, 0, 0.15);
  }

  .pagination-numbers {
    display: flex;
    gap: 5px;
    align-items: center;
  }

  .pagination-number {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 40px;
    height: 40px;
    border-radius: 50%;
    background: rgba(255, 255, 255, 0.8);
    color: #333;
    text-decoration: none;
    font-weight: bold;
    transition: all 0.3s ease;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
  }

  .pagination-number:hover {
    background: #667eea;
    color: white;
    transform: scale(1.1);
  }

  .pagination-number.active {
    background: #764ba2;
    color: white;
    transform: scale(1.2);
    box-shadow: 0 4px 15px rgba(118, 75, 162, 0.4);
  }

  .pagination-dots {
    color: white;
    font-weight: bold;
    padding: 0 10px;
  }

  @media (max-width: 768px) {
    .pagination {
      margin: 20px 0;
      gap: 5px;
    }

    .pagination-btn {
      padding: 10px 15px;
      font-size: 14px;
    }

    .pagination-number {
      width: 35px;
      height: 35px;
      font-size: 14px;
    }
  }

  @media (max-width: 480px) {
    .pagination {
      flex-direction: column;
      gap: 15px;
    }

    .pagination-numbers {
      order: -1;
    }
  }
</style>